import telebot
from telebot import types
import config
import random
import COVID19Py
import pyowm
import requests
from bs4 import BeautifulSoup as BS


bot = telebot.TeleBot(config.TOKEN)
response = requests.get(config.url).json()




@bot.message_handler(commands=['start', 'help'])
def welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    itembtn12 = types.KeyboardButton('–ü—Ä–∏–≤—ñ—Ç')
    markup.add(itembtn12)

    bot.send_message(message.chat.id,"–ü—Ä–∏–≤—ñ—Ç, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç –∑—Ä–æ–±–ª–µ–Ω–∏–π –±—É—Ç–∏ —Ç–≤–æ—ó–º –ø—ñ–¥–æ–ø–∏—Ç–Ω–∏–º –∫—Ä–æ–ª–∏–∫–æ–º.".format(message.from_user, bot.get_me()), parse_mode='html',reply_markup=markup)

def welcome2(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üé≤ –Ü–≥—Ä–∏")
    item2 = types.KeyboardButton("üòä –Ø–∫ —Å–ø—Ä–∞–≤–∏?")
    item3 = types.KeyboardButton("üôÉ –î–∞–≤–∞–π –ø–æ—Å–ø—ñ–ª–∫—É—î–º–æ—Å—å")
    item4 = types.KeyboardButton("üí¢ –Ü–Ω—à–µ")

    markup.add(item1, item2, item3, item4)

    bot.send_message(message.chat.id, "–í–∏–±–µ—Ä–∏ —â–æ—Å—å)", reply_markup=markup)

def igri(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üé≤ –†–∞–Ω–¥–æ–º–Ω–µ —á–∏—Å–ª–æ")
    item2 = types.KeyboardButton("üÄÑÔ∏è –û—Ä–µ–ª —á–∏ —Ä–µ—à–∫–∞?")
    item3 = types.KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
    markup.add(item1, item2, item3)

    bot.send_message(message.chat.id, "–ù—É –¥–∞–≤–∞–π –∑—ñ–≥—Ä–∞—î–º", reply_markup=markup)

def other(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item4 = types.KeyboardButton("‚òÄÔ∏è –ü–æ–≥–æ–¥–∞ –õ—å–≤—ñ–≤")
    item5 = types.KeyboardButton("üìä –ö—É—Ä—Å–∏ –≤–∞–ª—é—Ç")
    item6 = types.KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
    markup.add(item4, item5, item6)

    bot.send_message(message.chat.id, "–•–º–º–º–º–º...", reply_markup=markup)

@bot.message_handler(content_types=['text'])
def lalala(message):
    if message.chat.type == 'private':
        if message.text == 'üé≤ –†–∞–Ω–¥–æ–º–Ω–µ —á–∏—Å–ª–æ':
            bot.send_message(message.chat.id, str(random.randint(0, 100)))
        elif message.text == '–ü—Ä–∏–≤—ñ—Ç':
            welcome2(message)
        elif message.text == 'üé≤ –Ü–≥—Ä–∏':
            igri(message)
        elif message.text == 'üí¢ –Ü–Ω—à–µ':
            other(message)
        elif message.text == 'üÄÑÔ∏è –û—Ä–µ–ª —á–∏ —Ä–µ—à–∫–∞?':
            orel(message)
        elif message.text == '‚òÄÔ∏è –ü–æ–≥–æ–¥–∞ –õ—å–≤—ñ–≤':
            weather(message)
        elif(message.text == 'üìä –ö—É—Ä—Å–∏ –≤–∞–ª—é—Ç'):
            coins(message)
        elif (message.text == 'üßß –¢–µ–ª–µ–≥—Ä–∞–º —á–∞—Ç'):
            bot.send_message(message.chat.id, '–ù–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º —á–∞—Ç: https://t.me/DarzoChannel')
        elif (message.text == 'üé¥ –î—ñ—Å–∫–æ—Ä–¥ –∫–∞–Ω–∞–ª'):
            bot.send_message(message.chat.id, '–ù–∞—à –¥—ñ—Å–∫–æ—Ä–¥ –∫–∞–Ω–∞–ª: https://discord.gg/R7ZutrBwkb')
        elif (message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥'):
            welcome2(message)
        elif message.text == 'üôÉ –î–∞–≤–∞–π –ø–æ—Å–ø—ñ–ª–∫—É—î–º–æ—Å—å':
            telegramch(message)
        elif message.text == 'üòä –Ø–∫ —Å–ø—Ä–∞–≤–∏?':

            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–î–æ–±—Ä–µ", callback_data='good')
            item2 = types.InlineKeyboardButton("–ù–µ –¥—É–∂–µ", callback_data='bad')
            item3 = types.InlineKeyboardButton("–ù–µ–∑–Ω–∞—é", callback_data='sogood')

            markup.add(item1, item2, item3)

            bot.send_message(message.chat.id, '–î–æ–±—Ä–µ, —è–∫ —Å–∞–º(a)?', reply_markup=markup)

        else:
            bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —â–æ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ üò¢')


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–í–æ—Ç —ñ –¥–æ–±—Ä–µ üòä')
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ë—É–≤–∞—î üò¢')
            elif call.data == 'sogood':
                bot.send_message(call.message.chat.id, '–©–æ —Å—Ç–∞–ª–æ—Å—å? üò¢')


    except Exception as e:
        print(repr(e))


def weather(message):
    r = requests.get('https://ua.sinoptik.ua/%D0%BF%D0%BE%D0%B3%D0%BE%D0%B4%D0%B0-%D0%BB%D1%8C%D0%B2%D1%96%D0%B2')
    html = BS(r.content, 'html.parser')

    for el in html.select('#content'):
        t_min = el.select('.temperature .min')[0].text
        t_max = el.select('.temperature .max')[0].text
        text = el.select('.wDescription .description')[0].text

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        itermen1 = types.KeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
        markup.add(itermen1)

        bot.send_message(message.chat.id,"–ü–∏–≤—ñ—Ç –ø–æ–≥–æ–¥–∞ —Å—å–æ–≥–æ–¥–Ω—ñ —É –º.–õ—å–≤–æ–≤—ñ:\n" +
        t_min + ', ' + t_max + '\n' + text, reply_markup=markup)

def orel(message):
    list = ['–û—Ä–µ–ª', '–†–µ—à–∫–∞']
    bot.send_message(message.chat.id,random.choice(list))


def telegramch(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üßß –¢–µ–ª–µ–≥—Ä–∞–º —á–∞—Ç")
    item2 = types.KeyboardButton("üé¥ –î—ñ—Å–∫–æ—Ä–¥ –∫–∞–Ω–∞–ª")
    item3 = types.KeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
    markup.add(item1, item2, item3)

    bot.send_message(message.chat.id, "–ù—É –¥–∞–≤–∞–π, –≤–∏–±–µ—Ä–∞–π –∫—É–¥–∞ —Ç–æ–±—ñ –∑—Ä—É—á–Ω—ñ—à–µ üòÖ", reply_markup=markup)

def coins(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    itembtn1 = types.KeyboardButton('USD')
    itembtn2 = types.KeyboardButton('EUR')
    itembtn3 = types.KeyboardButton('RUR')
    itembtn4 = types.KeyboardButton('BTC')
    markup.add(itembtn1, itembtn2, itembtn3, itembtn4)

    msg = bot.send_message(message.chat.id,
                    "–î—ñ–∑–Ω–∞—Ç–∏—Å—å –∫—É—Ä—Å –ü—Ä–∏–≤–∞—Ç–ë–∞–Ω–∫–∞ (–≤ –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è—Ö)", reply_markup=markup)
    bot.register_next_step_handler(msg, process_coin_step)

def process_coin_step(message):
    try:
       # —É–±—Ä–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
       markup = types.ReplyKeyboardMarkup(resize_keyboard= True )
       itembtn1 = types.KeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
       markup.add(itembtn1)

       for coin in response:
           if (message.text == coin['ccy']):
              bot.send_message(message.chat.id, printCoin(coin['buy'], coin['sale']),
                               reply_markup=markup, parse_mode="Markdown")

    except Exception as e:
       bot.reply_to(message, 'ooops!')

def printCoin(buy, sale):
    '''–í—ã–≤–æ–¥ –∫—É—Ä—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é'''
    return "üí∞ *–ö—É—Ä—Å –∫—É–ø—ñ–≤–ª—ñ:* " + str(buy) + "\nüí∞ *–ö—É—Ä—Å –ø—Ä–æ–¥–∞–∂—ñ:* " + str(sale)


if __name__ == '__main__':
    bot.polling(none_stop=True)
